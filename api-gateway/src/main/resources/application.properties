server.port=8082


# application id - required for find instance of server(eureka server)
spring.application.name=api-gateway


# url address where registration will take place
eureka.client.service-url.defaultZone=http://${EUREKA_URL:localhost:8081/eureka}

# for properly API Gateway work
spring.cloud.gateway.discovery.locator.enabled=true

# enable ignore case for ID of microservices
spring.cloud.gateway.discovery.locator.lower-case-service-id=true

# routing service
spring.cloud.gateway.routes[0].id=message-route
spring.cloud.gateway.routes[0].uri=lb://message-microservice
spring.cloud.gateway.routes[0].predicates[0]=Path=/api/v1/message/view
spring.cloud.gateway.routes[0].predicates[1]=Method=GET
spring.cloud.gateway.routes[0].filters[0] = AuthenticationFilter

spring.cloud.gateway.routes[1].id=user-route
spring.cloud.gateway.routes[1].uri=lb://user-microservice
spring.cloud.gateway.routes[1].predicates[0]=Path=/api/v1/user/**
spring.cloud.gateway.routes[1].predicates[1]=Method=GET
spring.cloud.gateway.routes[1].filters[0] = AuthenticationFilter

spring.cloud.gateway.routes[2].id=attempt-route
spring.cloud.gateway.routes[2].uri=lb://task-microservice
spring.cloud.gateway.routes[2].predicates[0]=Path=/api/v1/tasks/*/attempt
spring.cloud.gateway.routes[2].predicates[1]=Method=POST
spring.cloud.gateway.routes[2].filters[0] = AuthenticationFilter


#spring.cloud.gateway.routes[2].filters[0] = AuthenticationFilter

spring.cloud.gateway.routes[3].id=auth-microservice
spring.cloud.gateway.routes[3].uri=lb://auth-microservice
spring.cloud.gateway.routes[3].predicates[0]=Path=/api/v1/auth/**


spring.cloud.gateway.routes[4].id=crud-route
spring.cloud.gateway.routes[4].uri=lb://crud-microservice
spring.cloud.gateway.routes[4].predicates[0]=Path=/api/v1/users/**
spring.cloud.gateway.routes[4].filters[0] = AuthenticationFilter

spring.cloud.gateway.routes[5].id=crud-route
spring.cloud.gateway.routes[5].uri=lb://crud-microservice
spring.cloud.gateway.routes[5].predicates[0]=Path=/api/v1/rooms/**
spring.cloud.gateway.routes[5].filters[0] = AuthenticationFilter

spring.cloud.gateway.routes[6].id=crud-route
spring.cloud.gateway.routes[6].uri=lb://crud-microservice
spring.cloud.gateway.routes[6].predicates[0]=Path=/api/v1/rooms/**
spring.cloud.gateway.routes[6].filters[0] = AuthenticationFilter

spring.cloud.gateway.routes[17].id=crud-route
spring.cloud.gateway.routes[17].uri=lb://crud-microservice
spring.cloud.gateway.routes[17].predicates[0]=Path=/api/v1/chat/users/**
spring.cloud.gateway.routes[17].filters[0] = AuthenticationFilter




spring.cloud.gateway.routes[7].id=task-route
spring.cloud.gateway.routes[7].uri=lb://crud-microservice
spring.cloud.gateway.routes[7].predicates[0]=Path=/api/v1/tasks/*
spring.cloud.gateway.routes[7].predicates[1]=Method=GET

spring.cloud.gateway.routes[8].id=attempt-route
spring.cloud.gateway.routes[8].uri=lb://crud-microservice
spring.cloud.gateway.routes[8].predicates[0]=Path=/api/v1/attempts/*
spring.cloud.gateway.routes[8].filters[0] = AuthenticationFilter


spring.cloud.gateway.routes[9].id=task-route
spring.cloud.gateway.routes[9].uri=lb://crud-microservice
spring.cloud.gateway.routes[9].predicates[0]=Path=/api/v1/tasks
spring.cloud.gateway.routes[9].predicates[1]=Method=GET

spring.cloud.gateway.routes[10].id=task-route
spring.cloud.gateway.routes[10].uri=lb://crud-microservice
spring.cloud.gateway.routes[10].predicates[0]=Path=/api/v1/tasks
spring.cloud.gateway.routes[10].predicates[1]=Method=POST
spring.cloud.gateway.routes[10].filters[0] = AuthenticationFilter

spring.cloud.gateway.routes[11].id=task-route
spring.cloud.gateway.routes[11].uri=lb://crud-microservice
spring.cloud.gateway.routes[11].predicates[0]=Path=/api/v1/tasks/*/tests
spring.cloud.gateway.routes[11].predicates[1]=Method=POST
spring.cloud.gateway.routes[11].filters[0] = AuthenticationFilter

spring.cloud.gateway.routes[12].id=task-route
spring.cloud.gateway.routes[12].uri=lb://crud-microservice
spring.cloud.gateway.routes[12].predicates[0]=Path=/api/v1/tasks/*/tests
spring.cloud.gateway.routes[12].filters[0] = AuthenticationFilter

spring.cloud.gateway.routes[14].id=task-route
spring.cloud.gateway.routes[14].uri=lb://crud-microservice
spring.cloud.gateway.routes[14].predicates[0]=Path=/api/v1/tasks/*/tests/*
spring.cloud.gateway.routes[14].filters[0] = AuthenticationFilter
# plug for future
#logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss}

spring.cloud.gateway.routes[13].id=attempt-route
spring.cloud.gateway.routes[13].uri=lb://crud-microservice
spring.cloud.gateway.routes[13].predicates[0]=Path=/api/v1/tasks/*/attempts
spring.cloud.gateway.routes[13].predicates[1]=Method=GET
spring.cloud.gateway.routes[13].filters[0] = AuthenticationFilter

spring.cloud.gateway.routes[15].id=attempt-route
spring.cloud.gateway.routes[15].uri=lb://crud-microservice
spring.cloud.gateway.routes[15].predicates[0]=Path=/api/v1/tasks/*/publish
spring.cloud.gateway.routes[15].predicates[1]=Method=POST
spring.cloud.gateway.routes[15].filters[0] = AuthenticationFilter

spring.cloud.gateway.routes[16].id=attempt-route
spring.cloud.gateway.routes[16].uri=lb://task-microservice
spring.cloud.gateway.routes[16].predicates[0]=Path=/api/v1/tasks/*/un-publish
spring.cloud.gateway.routes[16].predicates[1]=Method=POST
spring.cloud.gateway.routes[16].filters[0] = AuthenticationFilter