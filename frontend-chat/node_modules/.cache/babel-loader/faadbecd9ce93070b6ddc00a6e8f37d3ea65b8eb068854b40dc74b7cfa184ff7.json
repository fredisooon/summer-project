{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport store from '@/store/index';\nimport router from '@/router/router';\nexport function getCurrentTime() {\n  const now = new Date();\n  const hours = String(now.getHours()).padStart(2, '0'); // Добавляем ведущий ноль, если часы меньше 10\n  const minutes = String(now.getMinutes()).padStart(2, '0'); // Добавляем ведущий ноль, если минуты меньше 10\n  return `${hours}:${minutes}`;\n}\nexport function extractTime(timeString) {\n  const dateTime = new Date(timeString);\n  const hours = dateTime.getHours().toString().padStart(2, '0');\n  const minutes = dateTime.getMinutes().toString().padStart(2, '0');\n  return `${hours}:${minutes}`;\n}\nexport function getRandomIndex() {\n  const totalAvatars = 11;\n  return Math.floor(Math.random() * totalAvatars) + 1;\n}\nexport const initializeApp = () => {\n  const tokenFromLocalStorage = localStorage.getItem('token');\n  if (tokenFromLocalStorage) {\n    store.commit('SET_TOKEN', tokenFromLocalStorage);\n  } else {\n    // Перенаправление на другой маршрут\n    router.push({\n      name: 'About'\n    }); // Замените 'login' на путь, куда нужно перенаправить\n  }\n};","map":{"version":3,"names":["store","router","getCurrentTime","now","Date","hours","String","getHours","padStart","minutes","getMinutes","extractTime","timeString","dateTime","toString","getRandomIndex","totalAvatars","Math","floor","random","initializeApp","tokenFromLocalStorage","localStorage","getItem","commit","push","name"],"sources":["/Users/fyodor/Desktop/tinkoff-pm/spring-micro-demo/spring-micro-demo/frontend-chat/src/utils/utils.js"],"sourcesContent":["import store from '@/store/index';\nimport router from '@/router/router';\n\nexport function getCurrentTime() {\n    const now = new Date();\n    const hours = String(now.getHours()).padStart(2, '0'); // Добавляем ведущий ноль, если часы меньше 10\n    const minutes = String(now.getMinutes()).padStart(2, '0'); // Добавляем ведущий ноль, если минуты меньше 10\n    return `${hours}:${minutes}`;\n}\n\nexport function extractTime(timeString) {\n    const dateTime = new Date(timeString);\n    const hours = dateTime.getHours().toString().padStart(2, '0');\n    const minutes = dateTime.getMinutes().toString().padStart(2, '0');\n    return `${hours}:${minutes}`;\n  }\n\nexport function getRandomIndex() {\n    const totalAvatars = 11;\n    return Math.floor(Math.random() * totalAvatars) + 1;\n}\nexport const initializeApp = () => {\n    const tokenFromLocalStorage = localStorage.getItem('token');\n    if (tokenFromLocalStorage) {\n        store.commit('SET_TOKEN', tokenFromLocalStorage);\n    } else {\n        // Перенаправление на другой маршрут\n        router.push({ name: 'About' }); // Замените 'login' на путь, куда нужно перенаправить\n    }\n};"],"mappings":";AAAA,OAAOA,KAAK,MAAM,eAAe;AACjC,OAAOC,MAAM,MAAM,iBAAiB;AAEpC,OAAO,SAASC,cAAcA,CAAA,EAAG;EAC7B,MAAMC,GAAG,GAAG,IAAIC,IAAI,CAAC,CAAC;EACtB,MAAMC,KAAK,GAAGC,MAAM,CAACH,GAAG,CAACI,QAAQ,CAAC,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC;EACvD,MAAMC,OAAO,GAAGH,MAAM,CAACH,GAAG,CAACO,UAAU,CAAC,CAAC,CAAC,CAACF,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC;EAC3D,OAAQ,GAAEH,KAAM,IAAGI,OAAQ,EAAC;AAChC;AAEA,OAAO,SAASE,WAAWA,CAACC,UAAU,EAAE;EACpC,MAAMC,QAAQ,GAAG,IAAIT,IAAI,CAACQ,UAAU,CAAC;EACrC,MAAMP,KAAK,GAAGQ,QAAQ,CAACN,QAAQ,CAAC,CAAC,CAACO,QAAQ,CAAC,CAAC,CAACN,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC;EAC7D,MAAMC,OAAO,GAAGI,QAAQ,CAACH,UAAU,CAAC,CAAC,CAACI,QAAQ,CAAC,CAAC,CAACN,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC;EACjE,OAAQ,GAAEH,KAAM,IAAGI,OAAQ,EAAC;AAC9B;AAEF,OAAO,SAASM,cAAcA,CAAA,EAAG;EAC7B,MAAMC,YAAY,GAAG,EAAE;EACvB,OAAOC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAGH,YAAY,CAAC,GAAG,CAAC;AACvD;AACA,OAAO,MAAMI,aAAa,GAAGA,CAAA,KAAM;EAC/B,MAAMC,qBAAqB,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3D,IAAIF,qBAAqB,EAAE;IACvBrB,KAAK,CAACwB,MAAM,CAAC,WAAW,EAAEH,qBAAqB,CAAC;EACpD,CAAC,MAAM;IACH;IACApB,MAAM,CAACwB,IAAI,CAAC;MAAEC,IAAI,EAAE;IAAQ,CAAC,CAAC,CAAC,CAAC;EACpC;AACJ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}