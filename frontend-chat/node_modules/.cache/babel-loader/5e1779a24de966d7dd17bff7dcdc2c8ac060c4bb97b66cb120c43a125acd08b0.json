{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, normalizeClass as _normalizeClass, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"info-area\"\n};\nconst _hoisted_2 = {\n  class: \"time-area\"\n};\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"checkboxes-area\"\n}, [/*#__PURE__*/_createElementVNode(\"span\", null, \"✓✓\")], -1 /* HOISTED */);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_createElementVNode(\"div\", {\n    class: _normalizeClass([\"text-area\", \"\"])\n  }, [_createElementVNode(\"span\", null, _toDisplayString($props.message.content), 1 /* TEXT */)]), _createElementVNode(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"span\", null, _toDisplayString($options.editTimestamp($props.message.timestamp)), 1 /* TEXT */)]), _hoisted_3])]);\n}","map":{"version":3,"names":["class","_createElementVNode","_createElementBlock","_normalizeClass","_toDisplayString","$props","message","content","_hoisted_1","_hoisted_2","$options","editTimestamp","timestamp","_hoisted_3"],"sources":["/Users/fyodor/Desktop/tinkoff-pm/spring-micro-demo/spring-micro-demo/frontend-chat/src/components/ChatMessage.vue"],"sourcesContent":["<template>\n    <div>\n      <div class=\"text-area\" :class=\"\">\n        <span>{{ message.content }}</span>\n      </div>\n      <div class=\"info-area\">\n        <div class=\"time-area\">\n          <span>{{ editTimestamp(message.timestamp) }}</span>\n        </div>\n        <div class=\"checkboxes-area\">\n          <span>✓✓</span>\n        </div>\n      </div>\n    </div>\n  </template>\n  \n  <script>\n  import {extractTime} from '@/utils/utils';\n  export default {\n    data() {\n      return {};\n    },\n    methods: {\n      editTimestamp(timestamp) {\n        return extractTime(timestamp);\n      }\n    },\n    props: {\n      message: {\n        type: Object,\n        required: true,\n      },\n    },\n  };\n  </script>\n  \n  <style >\n .message {\n  background-color: #fff;\n  color: #000;\n  border: 1px solid #ccc;\n  padding: 10px;\n  border-radius: 10px;\n  display: flex;\n  align-items: center; /* Изменение display на inline-block */\n  position: relative;\n  max-width: 70%; /* Максимальная ширина блока, чтобы не занимал всю ширину экрана */\n}\n\n.info-area {\n  margin-left: auto;\n}\n  \n.info-area {\n    margin-left: auto;\n}\n  \n  .text-area {\n  margin-right: auto;\n  margin: 0;\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  -ms-transform: translate(-50%, -50%);\n  transform: translate(-50%, -50%);\n  white-space: nowrap; /* Запрещаем перенос текста на новую строку */\n  overflow: hidden; /* Скрываем лишний текст, если он не помещается */\n  text-overflow: ellipsis; /* Добавляем многоточие для обозначения обрезанного текста */\n}\n  \n  /* Стили для времени */\n  .time-area {\n    color: #888; /* Серый цвет для времени */\n    font-size: 12px; /* Размер шрифта времени */\n  }\n  \n  /* Стили для чекбоксов (галочек) */\n  .checkboxes-area {\n    margin-right: auto;\n    color: #ffcc00; /* Желтый цвет для галочек */\n    font-size: 14px; /* Размер шрифта галочек */\n    padding-left: 8px; /* Отступ слева для галочек */\n  }\n  </style>\n  "],"mappings":";;EAKWA,KAAK,EAAC;AAAW;;EACfA,KAAK,EAAC;AAAW;gCAGtBC,mBAAA,CAEM;EAFDD,KAAK,EAAC;AAAiB,I,aAC1BC,mBAAA,CAAe,cAAT,IAAE,E;;;uBATdC,mBAAA,CAYM,cAXJD,mBAAA,CAEM;IAFDD,KAAK,EAAAG,eAAA,EAAC,WAAW,EAAC,EAAS;MAC9BF,mBAAA,CAAkC,cAAAG,gBAAA,CAAzBC,MAAA,CAAAC,OAAO,CAACC,OAAO,iB,GAE1BN,mBAAA,CAOM,OAPNO,UAOM,GANJP,mBAAA,CAEM,OAFNQ,UAEM,GADJR,mBAAA,CAAmD,cAAAG,gBAAA,CAA1CM,QAAA,CAAAC,aAAa,CAACN,MAAA,CAAAC,OAAO,CAACM,SAAS,kB,GAE1CC,UAEM,C"},"metadata":{},"sourceType":"module","externalDependencies":[]}