{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"chat-area\"\n};\nconst _hoisted_2 = {\n  key: 0,\n  class: \"empty-area-wrapper\"\n};\nconst _hoisted_3 = {\n  key: 1,\n  class: \"chat-area-wrapper\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_chat_empty_area = _resolveComponent(\"chat-empty-area\");\n  const _component_chat_area_active = _resolveComponent(\"chat-area-active\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [$options.isEmpty(_ctx.activeInterlocutorName) ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, [_createVNode(_component_chat_empty_area)])) : (_openBlock(), _createElementBlock(\"div\", _hoisted_3, [_createVNode(_component_chat_area_active)]))]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","$options","isEmpty","_ctx","activeInterlocutorName","_hoisted_2","_createVNode","_component_chat_empty_area","_hoisted_3","_component_chat_area_active"],"sources":["/Users/fyodor/Desktop/tinkoff-pm/spring-micro-demo/spring-micro-demo/frontend-chat/src/components/ChatArea.vue"],"sourcesContent":["<template>\n    <div class=\"chat-area\">\n      <div \n        class=\"empty-area-wrapper\" \n        v-if=\"isEmpty(activeInterlocutorName)\">\n        <chat-empty-area/>\n      </div>\n      <div class=\"chat-area-wrapper\" v-else>\n        <chat-area-active/>\n      </div>\n    </div>\n  </template>\n  \n<script>\nimport ChatEmptyArea from '@/components/ChatEmptyArea.vue';\nimport ChatAreaActive from '@/components/ChatAreaActive.vue';\n  \nimport { mapState } from 'vuex';\n\nexport default {\n    components: {\n      ChatEmptyArea,\n      ChatAreaActive\n    },\n    data() {\n      return {\n        \n      }\n    },\n    methods: {\n      isEmpty(activeInterlocutorName) {\n        return Object.keys(activeInterlocutorName).length === 0 && activeInterlocutorName.constructor === Object;\n      }\n    },\n    computed: {\n      ...mapState([\n          'activeInterlocutorName',\n      ]),\n    },\n  \n  };\n  </script>\n  \n<style>\n.chat-area-wrapper  {\n  width: 100%;\n  height: 100%;\n}\n\n.chat-area {\n    position: relative;\n    display: flex;\n    flex-direction: column;\n    height: 92vh;\n    background-color: #fff;\n    border: 1px solid #ccc;\n  border-bottom: none;\n    border-radius: 4px;\n    overflow: hidden;\n    width: 70vw;\n    margin-left: auto;\n}\n\n.empty-area-wrapper {\n  width: 100%;\n  height: 100%;\n}\n</style>\n  "],"mappings":";;EACSA,KAAK,EAAC;AAAW;;;EAElBA,KAAK,EAAC;;;;EAIHA,KAAK,EAAC;;;;;uBANbC,mBAAA,CASM,OATNC,UASM,GANIC,QAAA,CAAAC,OAAO,CAACC,IAAA,CAAAC,sBAAsB,K,cAFtCL,mBAAA,CAIM,OAJNM,UAIM,GADJC,YAAA,CAAkBC,0BAAA,E,oBAEpBR,mBAAA,CAEM,OAFNS,UAEM,GADJF,YAAA,CAAmBG,2BAAA,E"},"metadata":{},"sourceType":"module","externalDependencies":[]}