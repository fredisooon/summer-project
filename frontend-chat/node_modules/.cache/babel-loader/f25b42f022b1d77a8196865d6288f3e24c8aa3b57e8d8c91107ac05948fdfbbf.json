{"ast":null,"code":"import { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, normalizeClass as _normalizeClass, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-4d3887f9\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = [\"src\", \"alt\"];\nconst _hoisted_2 = {\n  class: \"chat-info\"\n};\nconst _hoisted_3 = {\n  class: \"left-info-item\"\n};\nconst _hoisted_4 = {\n  class: \"chat-name\"\n};\nconst _hoisted_5 = {\n  class: \"last-message\"\n};\nconst _hoisted_6 = {\n  class: \"right-info-item\"\n};\nconst _hoisted_7 = {\n  class: \"time\"\n};\nconst _hoisted_8 = {\n  class: \"unreaded-message-count\"\n};\nconst _hoisted_9 = {\n  class: \"circle-counter\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", {\n    class: _normalizeClass([\"chat-item\", {\n      active: $options.isActiveChat\n    }]),\n    onClick: _cache[0] || (_cache[0] = $event => $options.selectChat($props.chat))\n  }, [_createElementVNode(\"img\", {\n    src: $options.avatarSrc,\n    alt: $props.chat.name,\n    class: \"chat-avatar\"\n  }, null, 8 /* PROPS */, _hoisted_1), _createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"div\", _hoisted_4, _toDisplayString($props.chat.interlocutor), 1 /* TEXT */), _createElementVNode(\"div\", _hoisted_5, _toDisplayString($props.chat.lastMessage ? $options.formatContentView($props.chat.lastMessage.content) : ''), 1 /* TEXT */)]), _createElementVNode(\"div\", _hoisted_6, [_createElementVNode(\"div\", _hoisted_7, _toDisplayString($props.chat.lastMessage ? $options.formattedTime : ''), 1 /* TEXT */), _createElementVNode(\"div\", _hoisted_8, [_createElementVNode(\"span\", _hoisted_9, _toDisplayString($options.unreadMessages), 1 /* TEXT */)])])])], 2 /* CLASS */);\n}","map":{"version":3,"names":["class","_createElementBlock","_normalizeClass","active","$options","isActiveChat","onClick","_cache","$event","selectChat","$props","chat","_createElementVNode","src","avatarSrc","alt","name","_hoisted_2","_hoisted_3","_hoisted_4","_toDisplayString","interlocutor","_hoisted_5","lastMessage","formatContentView","content","_hoisted_6","_hoisted_7","formattedTime","_hoisted_8","_hoisted_9","unreadMessages"],"sources":["/Users/fyodor/Desktop/tinkoff-pm/spring-micro-demo/spring-micro-demo/frontend-chat/src/components/ChatListItem.vue"],"sourcesContent":["<template>\n  <div\n    class=\"chat-item\"\n    @click=\"selectChat(chat)\"\n    :class=\"{ active: isActiveChat }\"\n  >\n    <img :src=\"avatarSrc\" :alt=\"chat.name\" class=\"chat-avatar\" />\n    <div class=\"chat-info\">\n      <div class=\"left-info-item\">\n        <div class=\"chat-name\">{{ chat.interlocutor }}</div>\n        <div class=\"last-message\">{{ chat.lastMessage ? formatContentView(chat.lastMessage.content) : '' }}</div>\n      </div>\n      <div class=\"right-info-item\">\n        <div class=\"time\">{{ chat.lastMessage ? formattedTime : '' }}</div>\n        <div class=\"unreaded-message-count\">\n          <span class=\"circle-counter\">{{ unreadMessages }}</span>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { mapActions, mapState } from 'vuex';\nimport { getRandomIndex } from '@/utils/utils';\n\nexport default {\n  props: {\n    chat: {\n      type: Object,\n      required: true,\n    },\n  },\n  computed: {\n    ...mapState(['activeChatId']),\n    isActiveChat() {\n      return this.activeChatId === this.chat.roomId;\n    },\n    avatarSrc() {\n      return require(`@/assets/images/avatar_storage/avatar${this.avatarIndex}.jpg`);\n    },\n    formattedTime() {\n      return this.chat.lastMessage.timestamp.substring(11, 16);\n    },\n    unreadMessages() {\n      return 7; // Здесь можно подставить логику подсчета непрочитанных сообщений\n    },\n  },\n  data() {\n    return {\n      avatarIndex: getRandomIndex(),\n    };\n  },\n  methods: {\n    ...mapActions(['UPDATE_ACTIVE_CHAT', \n                   'SET_ACTIVE_USER']),\n    selectChat(chat) {\n      this.UPDATE_ACTIVE_CHAT(chat);\n      this.$emit('updateActiveChat', chat);\n    },\n    formatContentView(content) {\n      return content ? (content.length > 35 ? content.substring(0, 35) : content) : '';\n    },\n  },\n};\n</script>\n\n<style scoped>\n.chat-item {\n  display: flex;\n  align-items: center;\n  padding: 10px;\n  padding-left: 20px;\n  cursor: pointer;\n  transition: background-color 0.2s ease;\n}\n\n.chat-item:hover {\n  background-color: #e0ded4;\n}\n\n.active,\n.active:hover {\n  background-color: #fcdd2d;\n}\n\n.chat-avatar {\n  width: 50px;\n  height: 50px;\n  border-radius: 50%;\n  margin-right: 10px;\n}\n\n.chat-info {\n  flex: 1;\n  display: inline-flex;\n}\n\n.chat-name {\n  font-weight: bold;\n  font-size: 18px;\n  margin-bottom: 4px;\n  color: #333;\n}\n\n.last-message {\n  font-size: 14px;\n  color: #666;\n  margin-bottom: 8px;\n}\n.unreaded-message-count {\n  font-size: 12px;\n  text-align: center;\n}\n\n.circle-counter {\n  height: 18px;\n  width: 18px;\n  background-color: #bbb;\n  border-radius: 50%;\n  display: inline-block;\n  text-align: center;\n  margin-top: 4px;\n  padding-top: 1px;\n}\n.time {\n  font-size: 14px;\n  color: #888;\n}\n\n.right-info-item {\n  margin-left: auto;\n}\n</style>\n"],"mappings":";;;;EAOSA,KAAK,EAAC;AAAW;;EACfA,KAAK,EAAC;AAAgB;;EACpBA,KAAK,EAAC;AAAW;;EACjBA,KAAK,EAAC;AAAc;;EAEtBA,KAAK,EAAC;AAAiB;;EACrBA,KAAK,EAAC;AAAM;;EACZA,KAAK,EAAC;AAAwB;;EAC3BA,KAAK,EAAC;AAAgB;;uBAdpCC,mBAAA,CAkBM;IAjBJD,KAAK,EAAAE,eAAA,EAAC,WAAW;MAAAC,MAAA,EAECC,QAAA,CAAAC;IAAY;IAD7BC,OAAK,EAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAAEJ,QAAA,CAAAK,UAAU,CAACC,MAAA,CAAAC,IAAI;MAGvBC,mBAAA,CAA6D;IAAvDC,GAAG,EAAET,QAAA,CAAAU,SAAS;IAAGC,GAAG,EAAEL,MAAA,CAAAC,IAAI,CAACK,IAAI;IAAEhB,KAAK,EAAC;uCAC7CY,mBAAA,CAWM,OAXNK,UAWM,GAVJL,mBAAA,CAGM,OAHNM,UAGM,GAFJN,mBAAA,CAAoD,OAApDO,UAAoD,EAAAC,gBAAA,CAA1BV,MAAA,CAAAC,IAAI,CAACU,YAAY,kBAC3CT,mBAAA,CAAyG,OAAzGU,UAAyG,EAAAF,gBAAA,CAA5EV,MAAA,CAAAC,IAAI,CAACY,WAAW,GAAGnB,QAAA,CAAAoB,iBAAiB,CAACd,MAAA,CAAAC,IAAI,CAACY,WAAW,CAACE,OAAO,uB,GAE5Fb,mBAAA,CAKM,OALNc,UAKM,GAJJd,mBAAA,CAAmE,OAAnEe,UAAmE,EAAAP,gBAAA,CAA9CV,MAAA,CAAAC,IAAI,CAACY,WAAW,GAAGnB,QAAA,CAAAwB,aAAa,uBACrDhB,mBAAA,CAEM,OAFNiB,UAEM,GADJjB,mBAAA,CAAwD,QAAxDkB,UAAwD,EAAAV,gBAAA,CAAxBhB,QAAA,CAAA2B,cAAc,iB"},"metadata":{},"sourceType":"module","externalDependencies":[]}