{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, resolveComponent as _resolveComponent, createBlock as _createBlock, createElementVNode as _createElementVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-e05537be\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"message-area\"\n};\nconst _hoisted_2 = {\n  class: \"message-container\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_ChatMessage = _resolveComponent(\"ChatMessage\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.chatMessages[_ctx.activeChatId], message => {\n    return _openBlock(), _createBlock(_component_ChatMessage, {\n      key: message.messageId,\n      message: message\n    }, null, 8 /* PROPS */, [\"message\"]);\n  }), 128 /* KEYED_FRAGMENT */))])]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_Fragment","_renderList","_ctx","chatMessages","activeChatId","message","_createBlock","_component_ChatMessage","key","messageId"],"sources":["/Users/fyodor/Desktop/tinkoff-pm/spring-micro-demo/spring-micro-demo/frontend-chat/src/components/ChatAreaMessages.vue"],"sourcesContent":["<template>    \n    <div class=\"message-area\">\n        <div class=\"message-container\">\n            <ChatMessage\n            v-for=\"message in chatMessages[activeChatId]\"\n            :key=\"message.messageId\"\n            :message=\"message\"/>\n        </div>\n    </div>\n</template>\n<script>\nimport ChatMessage from '@/components/ChatMessage.vue';\nimport {mapState} from 'vuex';\n\n    export default {\n        components: {ChatMessage},\n        computed: {\n            ...mapState([\n                'messages',\n                'activeChatId',\n                'chatMessages',\n                'activeChatId'\n        ])\n        }, \n        data() {\n            return {\n                stompClient: null,\n                roomId: '64b8e1ce631df963c898ae4f',\n            }\n        },\n    }\n</script>\n\n<style scoped>\n\n.message-area {\n    flex: 1;\n    padding: 16px;\n    \n}\n  \n.message-container {\n    flex: 1;\n    margin-bottom: 10px;\n    overflow-y: auto;\n    display: flex;\n    flex-direction: column-reverse;\n}\n  \n.message-content {\n    background-color: #f2f2f2;\n    padding: 8px;\n    border-radius: 4px;\n}\n  \n.message-time {\n    color: #888;\n    font-size: 12px;\n    margin-top: 4px;\n}\n</style>"],"mappings":";;;EACSA,KAAK,EAAC;AAAc;;EAChBA,KAAK,EAAC;AAAmB;;;uBADlCC,mBAAA,CAOM,OAPNC,UAOM,GANFC,mBAAA,CAKM,OALNC,UAKM,I,kBAJFH,mBAAA,CAGoBI,SAAA,QAAAC,WAAA,CAFFC,IAAA,CAAAC,YAAY,CAACD,IAAA,CAAAE,YAAY,GAApCC,OAAO;yBADdC,YAAA,CAGoBC,sBAAA;MADnBC,GAAG,EAAEH,OAAO,CAACI,SAAS;MACtBJ,OAAO,EAAEA"},"metadata":{},"sourceType":"module","externalDependencies":[]}